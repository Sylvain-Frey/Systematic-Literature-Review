http://ieeexplore.ieee.org/search/searchresult.jsp?bulkSetSize=12&queryText%3D.QT.clojure.QT.,2014/01/15 06:06:42,Status,Comments
Getting Started with Google App Engine and Clojure,"Bedra, A.",Relevance,"Internet Computing, IEEE",July-Aug. 2010,2010,14,4,85,88,"Over the past two years (2008-2010), Clojure (http:// clojure.org) has made quite a splash in two areas: functional programming and the Java Virtual Machine (JVM). Clojure is a Lisp implementation on the JVM, offering its users significant elegance, simplicity, and power. Although Clojure is a fairly young language, it's extremely well thought out and mature, with a vibrant community of talented and friendly people using and contributing to it. If you're targeting the JVM as your platform, you're doing yourself a disservice by not considering Clojure as an option. That being said, beauty is in the eye of the beholder, and you must decide for yourself. So, let's take a look at Compojure, a Web framework built on the Clojure language, and see how to create and deploy a Compojure application on the Google App Engine platform.",1089-7801,,,10.1109/MIC.2010.92,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5496809,Clojure;Web development;app engine;functional programming,Functional programming;Java;Search engines;Virtual machining,Java;LISP;search engines;virtual machines,Clojure;Compojure;Google App Engine;Java Virtual Machine;Lisp;Web framework;functional programming,,,,6,,1,,,20100628,,IEEE,IEEE Computer Society,IEEE Journals & Magazines,Accepted,
Clojure Templating Libraries: Fleet and Enlive,"Vanderburg, G.",InfoEther,"Internet Computing, IEEE",Sept.-Oct. 2010,2010,14,5,87,90,"Last issue, Aaron Bedra wrote about Compojure, a Clojure-based Web framework. Here, I follow up on his article, delving into one particular aspect of Web development using Clojure and Compojure: templating. On a recent project, I had the pleasure of working with Bedra, using Compojure. I had done Clojure programming before, but that project was the first time I had used it for Web development. One of the earliest decisions we had to make was which templating system to use.",1089-7801,,,10.1109/MIC.2010.111,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5562497,Clojure;Web development;functional programming;template languages;template systems;templating,Cloud computing;HTML;Indexes;Java;Libraries;Object oriented modeling;Rendering (computer graphics),Internet;libraries,Clojure templating libraries;Clojure-based Web framework;Compojure templating;Enlive;Fleet,,,,1,,1,,,20100902,,IEEE,IEEE Computer Society,IEEE Journals & Magazines,Accepted,
Clojure for Number Crunching on Multicore Machines,"Kalin, M.; Miller, D.",,Computing in Science & Engineering,Nov.-Dec. 2012,2012,14,6,12,23,"Clojure is a Lisp language designed to run on a Java Virtual Machine (JVM) and interoperate automatically with all Java libraries. However, compared to Java, Clojure has a concurrency API that encourages programmers to take advantage of multicore architectures through multithreading, but Clojure doesn't burden programmers with low-level thread-coordination tasks.",1521-9615,,,10.1109/MCSE.2012.69,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6235943,Java;Lisp;concurrency;multithreading;multiversion concurrency control;scientific computing;software transactional memory;synchronization,Computer languages;Concurrent computing;Instruction sets;Java;Libraries;Programming,Java;LISP;application program interfaces;concurrency control;multi-threading;multiprocessing systems;software libraries;virtual machines,Clojure;JVM;Java library;Java virtual machine;Lisp language;concurrency API;multicore architecture;multicore machine;multithreading;number crunching,,,,0,,,,2012-07-10,20121110,,IEEE,American Institute of Physics;IEEE Computer Society,IEEE Journals & Magazines,Rejected,
Incorporating the Ontology Paradigm Into Software Engineering: Enhancing Domain-Driven Programming in Clojure/Java,"Djuric, D.; Devedzic, V.","Dept. of Software Eng., Univ. of Belgrade, Belgrade, Serbia","Systems, Man, and Cybernetics, Part C: Applications and Reviews, IEEE Transactions on",Jan. 2012,2012,42,1,3,14,"There is a notable overlap of the challenges with which the semantic technologies and software engineering deal. They can also complement and mutually improve each other. Current efforts mostly focus on improving software tools around the resource description framework (RDF) and Web Ontology Language (OWL) Web-oriented ecosystem that helps ontology engineers but is alien to software engineers. This paper presents an opposite approach taken from the software developer's viewpoint - an incorporation of the ontology paradigm into a general-purpose programming language, in a simple and agile way, on a small scale, and in an unpretentious manner. The objective is to help programmers write simple domain-driven code with richer semantics. The means to achieve this objective relies on metaprogramming to internalize the ontology modeling paradigm into a mainstream programming environment based on the Java ecosystem, in a lightweight manner suitable for small teams. An embedded meta domain-specific language (DSL), which is called Magic Potion, is implemented in Clojure and blends ontology, functional, object-oriented, and concurrent paradigms. An example from the technology enhanced learning (TEL) domain is used to illustrate Magic Potion in action.",1094-6977,,,10.1109/TSMCC.2011.2140316,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5766765,Clojure;domain-specific languages;modeling spaces;multiparadigm programming;ontologies;programming languages;semantic technologies;software engineering,DSL;OWL;Object oriented modeling;Ontologies;Programming;Software,Java;functional programming;object-oriented programming;ontologies (artificial intelligence);semantic Web;software engineering,Clojure;Java ecosystem;Magic Potion;Web ontology language;Web oriented ecosystem;concurrent paradigms;domain driven code;domain driven programming;embedded meta domain specific language;functional paradigms;general purpose programming language;object oriented paradigms;ontology engineers;ontology modeling paradigm;resource description framework;semantic technologies;software engineering;technology enhanced learning domain,,,,0,,41,,2011-05-12,20111215,,IEEE,"IEEE Systems, Man, and Cybernetics Society",IEEE Journals & Magazines,Rejected,
ClojureScript: Functional Programming for JavaScript Platforms,"McGranaghan, M.",Heroku,"Internet Computing, IEEE",Nov.-Dec. 2011,2011,15,6,97,102,"ClojureScript is a compiler from a Clojure-like functional programming language to JavaScript. ClojureScript features deep integration with the Google Closure JavaScript library and whole-program optimizing compiler. ClojureScript brings efficient functional programming to JavaScript environments such as the browser, which are becoming increasingly important components of full-stack Web applications.",1089-7801,,,10.1109/MIC.2011.148,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6062553,Clojure;ClojureScript;JavaScript;Web development;functional programming,Computer applications;JAVA;Program processors;Web and internet services,Internet;Java;functional languages;functional programming;optimising compilers;software libraries,Clojure-like functional programming language;ClojureScript compiler;Google Closure JavaScript library;JavaScript platform;full-stack Web applications;functional programming;whole-program optimizing compiler,,,,0,,,,,20111031,,IEEE,IEEE Computer Society,IEEE Journals & Magazines,Borderline,
"Towards Lensfield - Data Management, Processing and Semantic Publication for Vernacular e-Science","Day, N.; Downing, J.; Hawizy, L.; Adams, N.; Murray-Rust, P.","Unilever Centre for Mol. Sci. Inf., Univ. of Cambridge, Cambridge, UK","e-Science, 2009. e-Science '09. Fifth IEEE International Conference on",9-11 Dec. 2009,2009,,,352,357,"Lensfield is a desktop and filesystem-based tool designed as a Â¿personal data management assistantÂ¿ for the scientist. It combines distributed version control (DVCS), software transaction memory (STM) and linked open data (LOD) publishing to create a novel data management, processing and publication tool. The application Â¿just looks afterÂ¿ these technologies for the scientist, providing simple interfaces for typical uses. It is built with Clojure and includes macros which define steps in a common workflow. Functions and Java libraries provide facilities for automatic processing of data which is ultimately published as RDF in a Web application. The progress of data processing is tracked by a fine-grained data structure that can be serialized to disk, with the potential to include manual steps and programmatic interrupts in largely automated processes through seamless resumption. Flexibility in operation and minimizing barriers to adoption are major design features.",,978-0-7695-3877-8,,10.1109/e-Science.2009.56,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5380845,java clojure mercurial workflow data-processing,Application software;Data processing;Distributed control;Java;Libraries;Memory management;Optical design;Publishing;Resource description framework;Software tools,data handling;natural sciences computing,Clojure;Java libraries;Lensfield;RDF;data processing;distributed version control;linked open data publishing;personal data management assistant;software transaction memory;vernacular e-science,,,,0,,14,,,20100115,,IEEE,,IEEE Conference Publications,Borderline,
An Open-Source Sandbox for Increasing the Accessibility of Functional Programming to the Bioinformatics and Scientific Communities,"Fenwick, M.; Sesanker, C.; Schiller, M.R.; Ellis, H.J.C.; Hinman, M.L.; Vyas, J.; Gryk, M.R.","Dept. of Microbial, Univ. of Connecticut Health Center, Farmington, CT, USA","Information Technology: New Generations (ITNG), 2012 Ninth International Conference on",16-18 April 2012,2012,,,89,94,"Scientists are continually faced with the need to express complex mathematical notions in code. The renaissance of functional languages such as LISP and Haskell is often credited to their ability to implement complex data operations and mathematical constructs in an expressive and natural idiom. The slow adoption of functional computing in the scientific community does not, however, reflect the congeniality of these fields. Unfortunately, the learning curve for adoption of functional programming techniques is steeper than that for more traditional languages in the scientific community, such as Python and Java, and this is partially due to the relative sparseness of available learning resources. To fill this gap, we demonstrate and provide applied, scientifically substantial examples of functional programming, We present a multi-language source-code repository for software integration and algorithm development, which generally focuses on the fields of machine learning, data processing, bioinformatics. We encourage scientists who are interested in learning the basics of functional programming to adopt, reuse, and learn from these examples. The source code is available at: https://github.com/CONNJUR/CONNJUR-Sandbox (see also http://www.connjur.org).",,978-1-4673-0798-7,,10.1109/ITNG.2012.21,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6209130,Clojure;Haskell;Java;LISP;NMR;bioinformatics;functional-programming,Bioinformatics;Data visualization;Functional programming;Nuclear magnetic resonance;Proteins;Schedules;Transient analysis,Java;LISP;bioinformatics;functional programming;learning (artificial intelligence);public domain software;software engineering,Haskell;Java;LISP;Python;algorithm development;bioinformatics;complex data operations;complex mathematical notions;data processing;functional computing;functional languages;functional programming accessibility;functional programming techniques;learning curve;learning resources;machine learning;multilanguage source-code repository;open-source Sandbox;scientific communities;software integration,,,,1,,10,,,20120531,,IEEE,,IEEE Conference Publications,Accepted,some comment
A Glimpse of the Future of Scientific Programming,"Hinsen, K.","Centre de Biophys. Mol., Orleans, France",Computing in Science & Engineering,Jan.-Feb. 2013,2013,15,1,84,88,Technology being developed right now in computer science labs might change the way scientists and engineers write programs in the future.,1521-9615,,,10.1109/MCSE.2013.1,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6415901,Clojure;Lisp;code generation;domain-specific languages;metaprogramming;scientific programming,DSL;Data structures;Java;Libraries;Program processors;Programming;Scientific computing,object-oriented programming,computer science labs;engineers;program writing;scientific programming;scientists,,,,0,,,,,20130121,,IEEE,American Institute of Physics;IEEE Computer Society,IEEE Journals & Magazines,Rejected,some other comment
Concurrency in Modern Programming Languages,"Di Pierro, Massimo; Skinner, David",DePaul University,Computing in Science & Engineering,Nov.-Dec. 2012,2012,14,6,8,10,The guest editors present the articles for this special issue on modern programming languages.,1521-9615,,,10.1109/MCSE.2012.111,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6341738,Clojure;Erlang;Haskell;modern programming languages;parallel programming;scientific computing,Computational modeling;Computer lanugages;Programming;Special issues and sections,,,,,,0,,,,,20121110,,IEEE,American Institute of Physics;IEEE Computer Society,IEEE Journals & Magazines,,no status was entered for this one
Rapid Application Prototyping for Functional Languages,"Podloucky, M.","Dept. of Software Eng., Czech Tech. Univ., Prague, Czech Republic","Computer Science and Information Systems (FedCSIS), 2013 Federated Conference on",8-11 Sept. 2013,2013,,,963,969,"This work addresses the problem of automated graphical user interface generation for functional programs in relation to rapid application prototyping. First an analysis of current state in the field of automated GUI generation is performed. Based on the analysis, the concept of functionally structured user interface (FSUI) is introduced. Meta-data system for code annotation is then specified for the Clojure programming language and a transformation from this system to FSUI data model is implemented. Finally, a graphical layer for displaying the actual interface is implemented in Clojure.",,,,,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6644130,,Analytical models;Computational modeling;Lips;Programming;XML,functional languages;functional programming;graphical user interfaces;program diagnostics;software prototyping,Clojure programming language;FSUI;automated GUI generation;automated graphical user interface generation;code annotation;functional languages;functionally structured user interface;graphical layer;meta-data system;rapid application prototyping;state analysis,,,,0,,,,,20131107,,IEEE,,IEEE Conference Publications,some_arbitrary_status,
An Event Driven Multi-agent Architecture for Enabling Cloud Governance,"Munteanu, V.I.; Fortis, T.-F.; Negru, V.","Inst. e-Austria, Timisoara, Romania","Utility and Cloud Computing (UCC), 2012 IEEE Fifth International Conference on",5-8 Nov. 2012,2012,,,309,314,"Cloud adoption is consistent within IT-based industries at different maturity levels. While cloud migration is an ongoing process, its base characteristics are not yet fully exploited. As Cloud Governance is built on top of requirements like security, reliability, trust, portability, interoperability, or fail over, a highly distributed and concurrent, and fault tolerant solution is required in order to achieve above specified requirements. This paper describes the core of an event-driven multi-agent architecture for supporting Cloud Governance activities, built around Akka/Clojure actor characteristics and fully exploiting the Enterprise Integration Patterns. The modeling process follows the Gaia methodology for agent-oriented analysis and design.",,978-1-4673-4432-6,,10.1109/UCC.2012.50,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6424965,Gaia methodology;cloud computing;cloud governance;cloud management;multi-agent system,Cloud computing;Computational modeling;Computer architecture;Multiagent systems;Protocols;Safety;Security,cloud computing;mult